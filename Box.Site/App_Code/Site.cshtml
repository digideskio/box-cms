@using Box.CMS.Web;
@using Box.CMS;

@helper MenuLink(string url, string name, string style = null) {
    string selectedClass = "";

    if (IsRequestUrl(url)) {
        selectedClass = "active";
    }
    
    string styleAttr = "";
    if (style != null) {
        styleAttr = "style=\"" + style + "\"";
    }
    
    if (!IsExternalUrl(url)) {
        url = Href(url);
    }
    
    <li class="@selectedClass" @styleAttr><a href="@url">@name</a></li>
}

@helper MenuLink(ContentHead head) {
    @MenuLink(@BoxLib.GetContentLink(head), head.Name)
}

@helper Gallery(string galleryId, object images, int height = 350, int nThumbs = 0) {

    Box.CMS.File[] f = ((Newtonsoft.Json.Linq.JArray)images).ToObject<Box.CMS.File[]>();
    string jsonString = Json.Encode(f);

    if (nThumbs == 0 || nThumbs > f.Length) {
        nThumbs = f.Length;
    }
    
    <script type="text/javascript">
        var gallery = new Box.Gallery('@galleryId', @nThumbs, @height, JSON.parse('@Html.Raw(jsonString)'), '@Href("~")');
    </script>
}




@functions  {

    public static IHtmlString OnErrorImg() {
        return new HtmlString("onerror=\"this.onerror=null;this.src='" + @Href("~/images/no-image.png") + "';\"");
    }

    public static bool IsExternalUrl(string url) {
        if (url == null)
            return false;
        return url.ToLower().StartsWith("http");
    }
    
    public static bool IsRequestUrl(string url) {

        if (IsExternalUrl(url))
            return false;
                
        if (url == null) { url = "~"; }

        string linkUrl = CleanURL(Href(url));
        string myUrl = CleanURL(Request.RawUrl);

        if (linkUrl != "/" && myUrl.StartsWith(linkUrl)) {
            return true;
        }

        if (linkUrl == "/" && myUrl == linkUrl) {
            return true;
        }
        return false;
        
    }

    public static String CleanURL(String url, bool removeParameters = false) {
        
        if (removeParameters && url.Contains("?")) {
            url = url.Substring(0, url.IndexOf("?"));
        }
        if (!url.EndsWith("/")) {
            url = url + "/";
        }
        return url.ToLower();        
    }

    public static String BreadcrumbNiceName(string location) {
        switch (location) {
            case "/pages/":
                return "Pages";
        }
        return location;
    }
        
}