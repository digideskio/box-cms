@using Box.Core.Web

<div id="fileDatabaseDialogContainer" data-bind="stopBindings: true" style="display:none; float:left; width: 100%; height: 100%;">
    <div id="fileDatabaseDialog" style="margin: 90px 150px 90px 150px; height: 100%">
        <h2  style="color:white;">@Box.CMS.SharedStrings.Select_an_image</h2>
        <nav style="background: transparent; width: 100px; position: absolute; right: 20px;
            top: 20px;">
            <button onclick="dialogHelper.closeDialog('fileDatabaseDialogContainer');">@Resources.SharedStrings.Close</button>
        </nav>
        <fieldset id="searchFieldSet" class="searchFieldSet" style=" margin-bottom:30px; background-color: transparent; border-color: transparent;">
            
            <label style="color: white;">@Resources.SharedStrings.Search
                (@Box.CMS.SharedStrings.from <span data-bind="text: folder"></span>)
            </label>
            <div>   
                @MetroUI.TextBox(placeholder:@Box.CMS.SharedStrings.File_or_image_name, databind: "value: searchFilter, valueUpdate:'afterkeydown'", others: "onkeyup='pageVM.filter()'")
            </div>

        </fieldset>

        <ul data-bind="foreach: files" class="tileList">
            <li data-bind="click: window.selectFile" onmouseover="showContextMenu(this)" onmouseout="hideContextMenu(this)" >

                <div class="tile">
                    <div class="tile-content image">
                        <img style="height: 100%; max-width: none" data-bind="attr: { src: FileUrl.toView($data, true) }" />
                    </div>
                    <div class="brand bg-dark opacity">
                        <span class="text fg-white" data-bind="text: FileName"></span>
                    </div>
                </div>

                <div class="contextMenu">
                    <button data-bind="click: function(data) { dialogHelper.endark(); filesVM.removingItem(data); }, clickBubble: false">
                        <i class="icon-remove"></i>
                    </button>
                    <button data-bind="click: function(data) { window.open(FileUrl.toView(data), '_blank'); }, clickBubble: false">
                        <i class="icon-eye"></i>
                    </button>
                </div>

            </li>
        </ul>
        @Html.Partial("ListNavigation", new PageNavigationModel() { ListName = "files", ViewModel = "filesVM" })            
    </div>
    <div id="removeFileDialog" class="dialog window flat shadow boxDialog" data-bind="if: filesVM.removingItem()!=null, visible: filesVM.removingItem()!=null" style="display: none">
        <h1>@Box.CMS.SharedStrings.Remove_content</h1>
        @Box.CMS.SharedStrings.The_content_X
        <!-- melhorar -->
        <span data-bind="text: filesVM.removingItem().FileName"></span>
        @Resources.SharedStrings.will_be_removed
        <br />
        @Resources.SharedStrings.Are_you_sure
        <nav>
            <button class="large" onclick="filesVM.removingItem(null);">@Resources.SharedStrings.Cancel</button>
            <button class="danger large" onclick="filesVM.removeItem();"><i class="icon-remove on-left"></i>@Resources.SharedStrings.Yes</button>
        </nav>
    </div>
</div>
@this.ScriptBlock(
@<script type="text/javascript">
     function showFileDatabase(onSelect, folder) {
         filesVM.folder(folder);
         filesVM.onSelect = onSelect;

         dialogHelper.showDialog('fileDatabaseDialogContainer');

         var dialog = document.getElementById('fileDatabaseDialog');
         if (dialog != null)
             filesVM.setItemsPerPage(dialog.clientWidth - 30, dialog.clientHeight - 150);

         if (filesVM.files == null || filesVM.files().length == 0)
             filesVM.loadData();
     }

     function selectFile(file) {
         if (filesVM.onSelect) {
             file.Caption = '';
             filesVM.onSelect(file);
         }
         $('input[type=button]').attr('disabled', false);
         dialogHelper.closeDialog('fileDatabaseDialogContainer');
     }

     ko.applyBindings(filesVM, document.getElementById('fileDatabaseDialog'));
     ko.applyBindings(filesVM, document.getElementById('removeFileDialog'));
</script>
)
