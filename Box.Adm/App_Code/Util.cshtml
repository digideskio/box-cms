@functions {
    public static string GravatarHashEmail(string email) {
        // Create a new instance of the MD5CryptoServiceProvider object.  
        System.Security.Cryptography.MD5 md5Hasher = System.Security.Cryptography.MD5.Create();

        // Convert the input string to a byte array and compute the hash.  
        byte[] data = md5Hasher.ComputeHash(System.Text.Encoding.Default.GetBytes(email));

        // Create a new Stringbuilder to collect the bytes  
        // and create a string.  
        System.Text.StringBuilder sBuilder = new System.Text.StringBuilder();

        // Loop through each byte of the hashed data  
        // and format each one as a hexadecimal string.  
        for (int i = 0; i < data.Length; i++) {
            sBuilder.Append(data[i].ToString("x2"));
        }

        return sBuilder.ToString();  // Return the hexadecimal string. 
    }
    
    public static string GravatarUrl(string email, int size, string noImage = "mm") {
        return "http://www.gravatar.com/avatar/" + GravatarHashEmail(email) + ".jpg?s=" + size + "&d=" + noImage;
    }

    public static string TokenHeaderValue() {
        string cookieToken, formToken;
        AntiForgery.GetTokens(null, out cookieToken, out formToken);
        return cookieToken + ":" + formToken;
    }

}
